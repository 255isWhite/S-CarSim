<?xml version="1.0" ?>
<sdf version="1.8">
    <world name="sensor_world">
        <physics name="1ms" type="ignored">
            <max_step_size>0.001</max_step_size>
            <real_time_factor>1.0</real_time_factor>
        </physics>
        <plugin
            filename="libgz-sim-physics-system.so"
            name="gz::sim::systems::Physics">
        </plugin>
        <plugin
            filename="libgz-sim-user-commands-system.so"
            name="gz::sim::systems::UserCommands">
        </plugin>
        <plugin
            filename="libgz-sim-scene-broadcaster-system.so"
            name="gz::sim::systems::SceneBroadcaster">
        </plugin>
        <plugin filename="libgz-sim-imu-system.so"
                name="gz::sim::systems::Imu">
        </plugin>
        <plugin filename="libgz-sim-sensors-system.so"
                name="gz::sim::systems::Sensors">
            <render_engine>ogre2</render_engine>
        </plugin>
        <plugin filename="libgz-sim-contact-system.so"
                name="gz::sim::systems::Contact">
        </plugin>
        <gui fullscreen="0">

            <!-- 3D scene -->
            <plugin filename="GzScene3D" name="3D View">
                <gz-gui>
                <title>3D View</title>
                <property type="bool" key="showTitleBar">false</property>
                <property type="string" key="state">docked</property>
                </gz-gui>

                <engine>ogre2</engine>
                <scene>scene</scene>
                <ambient_light>0.4 0.4 0.4</ambient_light>
                <background_color>0.8 0.8 0.8</background_color>
            </plugin>

            <!-- World control -->
            <plugin filename="WorldControl" name="World control">
                <gz-gui>
                <title>World control</title>
                <property type="bool" key="showTitleBar">false</property>
                <property type="bool" key="resizable">false</property>
                <property type="double" key="height">72</property>
                <property type="double" key="width">121</property>
                <property type="double" key="z">1</property>

                <property type="string" key="state">floating</property>
                <anchors target="3D View">
                    <line own="left" target="left"/>
                    <line own="bottom" target="bottom"/>
                </anchors>
                </gz-gui>

                <play_pause>true</play_pause>
                <step>true</step>
                <start_paused>false</start_paused>
                <service>/world/sensor_world/control</service>
                <stats_topic>/world/sensor_world/stats</stats_topic>
            </plugin>

            <!-- World statistics -->
            <plugin filename="WorldStats" name="World stats">
                <gz-gui>
                <title>World stats</title>
                <property type="bool" key="showTitleBar">false</property>
                <property type="bool" key="resizable">false</property>
                <property type="double" key="height">110</property>
                <property type="double" key="width">290</property>
                <property type="double" key="z">1</property>

                <property type="string" key="state">floating</property>
                <anchors target="3D View">
                    <line own="right" target="right"/>
                    <line own="bottom" target="bottom"/>
                </anchors>
                </gz-gui>

                <sim_time>true</sim_time>
                <real_time>true</real_time>
                <real_time_factor>true</real_time_factor>
                <iterations>true</iterations>
                <topic>/world/sensor_world/stats</topic>

            </plugin>

            <!-- Entity tree -->
            <plugin filename="EntityTree" name="Entity tree"/>

            <!-- KeyPublisher plugin-->
            <plugin filename="KeyPublisher" name="Key Publisher"/>

        </gui>

        <light type="directional" name="sun">
            <cast_shadows>true</cast_shadows>
            <pose>0 0 10 0 0 0</pose>
            <diffuse>0.8 0.8 0.8 1</diffuse>
            <specular>0.2 0.2 0.2 1</specular>
            <attenuation>
                <range>2000</range>
                <constant>0.9</constant>
                <linear>0.01</linear>
                <quadratic>0.001</quadratic>
            </attenuation>
            <direction>-0.5 0.1 -0.9</direction>
        </light>

        <model name="ground_plane">
            <static>true</static>
            <link name="link">
                <collision name="collision">
                <geometry>
                    <plane>
                    <normal>0 0 1</normal>
                    </plane>
                </geometry>
                </collision>
                <visual name="visual">
                <geometry>
                    <plane>
                    <normal>0 0 1</normal>
                    <size>1000 1000</size>
                    </plane>
                </geometry>
                <material>
                    <ambient>0.8 0.8 0.8 1</ambient>
                    <diffuse>0.8 0.8 0.8 1</diffuse>
                    <specular>0.8 0.8 0.8 1</specular>
                </material>
                </visual>
            </link>
        </model>

        <model name='vehicle_blue' canonical_link='chassis'>
            <pose relative_to='world'>-0 -0 0 0 0 0</pose>   <!--the pose is relative to the world by default-->

            <frame name="lidar_frame" attached_to='chassis'>
                <pose>0.8 0 0.3 0 0 0</pose>
            </frame>
            <frame name="camera_frame" attached_to='chassis'>
                <pose>0.8 0 0.43 0 0 0</pose>
            </frame>

            <link name='chassis'>
                <pose relative_to='__model__'>1 0 0.4 0 0 0</pose>
                <inertial> <!--inertial properties of the link mass, inertia matix-->
                    <mass>1.14395</mass>
                    <inertia>
                        <ixx>0.126164</ixx>
                        <ixy>0</ixy>
                        <ixz>0</ixz>
                        <iyy>0.416519</iyy>
                        <iyz>0</iyz>
                        <izz>0.481014</izz>
                    </inertia>
                </inertial>
                <visual name='visual'>
                    <geometry>
                        <box>
                            <size>2.0 1.0 0.4</size> <!--question: this size is in meter-->
                        </box>
                    </geometry>
                    <!--let's add color to our link-->
                    <material>
                        <ambient>1.0 0.0 0.0 1.0</ambient>
                        <diffuse>0.0 1.0 0.0 0.5</diffuse>
                        <specular>0.0 0.0 1.0 1.0</specular>
                    </material>
                </visual>
                <collision name='collision'> <!--todo: describe why we need the collision-->
                    <geometry>
                        <box>
                            <size>2.0 1.0 0.3</size>
                        </box>
                    </geometry>
                </collision>
                <sensor name="imu_sensor" type="imu">
                    <always_on>1</always_on>
                    <update_rate>60</update_rate>
                    <visualize>true</visualize>
                    <topic>imu</topic>
                </sensor>
                <sensor name='gpu_lidar' type='gpu_lidar'>"
                    <pose relative_to='lidar_frame'>0 0 0 0 0 0</pose>
                    <topic>lidar</topic>
                    <update_rate>20</update_rate>
                    <ray>
                    <scan>
                        <horizontal>
                        <samples>640</samples>
                        <resolution>1</resolution>
                        <min_angle>-1.396263</min_angle>
                        <max_angle>1.396263</max_angle>
                        </horizontal>
                        <vertical>
                        <samples>1</samples>
                        <resolution>0.01</resolution>
                        <min_angle>0</min_angle>
                        <max_angle>0</max_angle>
                        </vertical>
                    </scan>
                    <range>
                        <min>0.08</min>
                        <max>20.0</max>
                        <resolution>0.01</resolution>
                    </range>
                    </ray>
                    <always_on>1</always_on>
                    <visualize>true</visualize>
                </sensor>
                <sensor name="camera" type="camera">
                    <pose relative_to='camera_frame'>0 0 0 0 0 0</pose>
                    <topic>camera</topic>
                    <update_rate>20</update_rate>
                    <always_on>1</always_on>
                    <visualize>true</visualize>
                    <camera name="camera">
                        <horizontal_fov>1.50971</horizontal_fov>
                        <image>
                          <width>1920</width>
                          <height>1200</height>
                          <format>R8G8B8</format>
                        </image>
                        <clip>
                          <near>0.4</near>
                          <far>300</far>
                        </clip>
                        <noise>
                          <type>gaussian</type>
                          <mean>0</mean>
                          <stddev>0.007</stddev>
                        </noise>
                        <lens>
                          <intrinsics>
                            <fx>1020.51</fx>
                            <fy>1020.51</fy>
                            <cx>959.5</cx>
                            <cy>599.5</cy>
                            <s>0</s>
                          </intrinsics>
                          <type>stereographic</type>
                          <scale_to_hfov>1</scale_to_hfov>
                        </lens>
                    </camera>
                </sensor>
            </link>

            <link name="camera_visual">
                <pose relative_to='camera_frame'>0 0 0 0 0 0</pose>
                <visual name='visual'>
                    <geometry>
                        <box>
                            <size>0.05 0.25 0.06</size>
                        </box>
                    </geometry>
                    <material>
                        <ambient>1.0 0.0 0.0 1.0</ambient>
                        <diffuse>0 0.0 0.0 1.0</diffuse>
                        <specular>1.0 0.0 0.0 1.0</specular>
                    </material>
                </visual>
            </link>
            <joint name="camera_joint" type="fixed">
                <parent>chassis</parent>
                <child>camera_visual</child>
            </joint>

            <link name="lidar_visual">
                <pose relative_to='lidar_frame'>0 0 0 0 0 0</pose>
                <visual name='visual'>
                    <geometry>
                        <cylinder>
                            <radius>0.1</radius>
                            <length>0.2</length>
                        </cylinder>
                    </geometry>
                    <material>
                        <ambient>1.0 0.0 0.0 1.0</ambient>
                        <diffuse>0 0.0 1.0 1.0</diffuse>
                        <specular>1.0 0.0 0.0 1.0</specular>
                    </material>
                </visual>
            </link>
            <joint name="lidar_joint" type="fixed">
                <parent>chassis</parent>
                <child>lidar_visual</child>
            </joint>

            <!--let's build the left wheel-->
            <link name='rear_left_wheel'>
                <pose relative_to="chassis">-0.5 0.6 0 -1.5707 0 0</pose> <!--angles are in radian-->
                <inertial>
                    <mass>1</mass>
                    <inertia>
                        <ixx>0.145833</ixx>
                        <ixy>0</ixy>
                        <ixz>0</ixz>
                        <iyy>0.145833</iyy>
                        <iyz>0</iyz>
                        <izz>0.125</izz>
                    </inertia>
                </inertial>
                <visual name='visual'>
                    <geometry>
                        <cylinder>
                            <radius>0.4</radius>
                            <length>0.1</length>
                        </cylinder>
                    </geometry>
                    <material>
                        <ambient>1.0 0.0 0.0 1.0</ambient>
                        <diffuse>1.0 0.0 0.0 1.0</diffuse>
                        <specular>1.0 0.0 0.0 1.0</specular>
                    </material>
                </visual>
                <collision name='collision'>
                    <geometry>
                        <cylinder>
                            <radius>0.4</radius>
                            <length>0.1</length>
                        </cylinder>
                    </geometry>
                </collision>
            </link>


            <!--copy and paste for right wheel but change position-->
            <link name='rear_right_wheel'>
                <pose relative_to="chassis">-0.5 -0.6 0 -1.5707 0 0</pose> <!--angles are in radian-->
                <inertial>
                    <mass>1</mass>
                    <inertia>
                        <ixx>0.145833</ixx>
                        <ixy>0</ixy>
                        <ixz>0</ixz>
                        <iyy>0.145833</iyy>
                        <iyz>0</iyz>
                        <izz>0.125</izz>
                    </inertia>
                </inertial>
                <visual name='visual'>
                    <geometry>
                        <cylinder>
                            <radius>0.4</radius>
                            <length>0.1</length>
                        </cylinder>
                    </geometry>
                    <material>
                        <ambient>1.0 0.0 0.0 1.0</ambient>
                        <diffuse>1.0 0.0 0.0 1.0</diffuse>
                        <specular>1.0 0.0 0.0 1.0</specular>
                    </material>
                </visual>
                <collision name='collision'>
                    <geometry>
                        <cylinder>
                            <radius>0.4</radius>
                            <length>0.1</length>
                        </cylinder>
                    </geometry>
                </collision>
            </link>


            <frame name="caster_frame" attached_to='chassis'>
                <pose>0.8 0 -0.2 0 0 0</pose>
            </frame>

            <!--caster wheel-->
            <link name='caster'>
                <pose relative_to='caster_frame'/>
                <inertial>
                    <mass>1</mass>
                    <inertia>
                        <ixx>0.1</ixx>
                        <ixy>0</ixy>
                        <ixz>0</ixz>
                        <iyy>0.1</iyy>
                        <iyz>0</iyz>
                        <izz>0.1</izz>
                    </inertia>
                </inertial>
                <visual name='visual'>
                    <geometry>
                        <sphere>
                            <radius>0.2</radius>
                        </sphere>
                    </geometry>
                    <material>
                        <ambient>0.0 1 0.0 1</ambient>
                        <diffuse>0.0 1 0.0 1</diffuse>
                        <specular>0.0 1 0.0 1</specular>
                    </material>
                </visual>
                <collision name='collision'>
                    <geometry>
                        <sphere>
                            <radius>0.2</radius>
                        </sphere>
                    </geometry>
                </collision>
            </link>


            <joint name='rear_left_wheel_joint' type='revolute'> <!--continous joint is not supported yet-->
                <pose relative_to='rear_left_wheel'/>
                <parent>chassis</parent>
                <child>rear_left_wheel</child>
                <axis>
                    <xyz expressed_in='__model__'>0 1 0</xyz> <!--can be descired to any frame or even arbitrary frames-->
                    <limit>
                        <lower>-1.79769e+308</lower>    <!--negative infinity-->
                        <upper>1.79769e+308</upper>     <!--positive infinity-->
                    </limit>
                </axis>
            </joint>

            <joint name='rear_right_wheel_joint' type='revolute'>
                <pose relative_to='rear_right_wheel'/>
                <parent>chassis</parent>
                <child>rear_right_wheel</child>
                <axis>
                    <xyz expressed_in='__model__'>0 1 0</xyz>
                    <limit>
                        <lower>-1.79769e+308</lower>    <!--negative infinity-->
                        <upper>1.79769e+308</upper>     <!--positive infinity-->
                    </limit>
                </axis>
            </joint>

            <!--connecting these links together using joints-->
            

 
            <!--different type of joints ball joint--> <!--defult value is the child-->
            <joint name='caster_wheel' type='ball'>
                <parent>chassis</parent>
                <child>caster</child>
            </joint>

            <!--diff drive plugin-->
            <plugin
                filename="libgz-sim-diff-drive-system.so"
                name="gz::sim::systems::DiffDrive">
                <left_joint>rear_left_wheel_joint</left_joint>
                <right_joint>rear_right_wheel_joint</right_joint>
                <wheel_separation>1.2</wheel_separation>
                <wheel_radius>0.4</wheel_radius>
                <odom_publish_frequency>10</odom_publish_frequency>
                <topic>cmd_vel</topic>
            </plugin>



        </model>

        <!--wall-->
        <model name='wall'>
            <static>true</static>
            <pose>0 0 0 0 0 0</pose><!--pose relative to the world-->
            <link name='block0'>
                <pose>0 20 0 0 0 1.5707 </pose>
                <visual name='visual'>
                    <geometry>
                        <box>
                            <size>0.5 40.0 2.0</size>
                        </box>
                    </geometry>
                    <!--let's add color to our link-->
                    <material>
                        <ambient>0.4 0.7 0.2 1</ambient>
                        <diffuse>0.9 0.2 1.0 1</diffuse>
                        <specular>0.7 1.0 0.0 1</specular>
                    </material>
                </visual>
                <collision name='collision'> <!--todo: describe why we need the collision-->
                    <geometry>
                        <box>
                            <size>0.5 40.0 2.0</size>
                        </box>
                    </geometry>
                </collision>
                <sensor name='sensor_contact' type='contact'>
                    <contact>
                        <collision>collision</collision>
                    </contact>
                    <always_on>1</always_on>
                </sensor>
            </link>
            <link name='block1'>
                <pose>0 -20 0 0 0 1.5707 </pose>
                <visual name='visual'>
                    <geometry>
                        <box>
                            <size>0.5 40.0 2.0</size>
                        </box>
                    </geometry>
                    <!--let's add color to our link-->
                    <material>
                        <ambient>0.4 0.7 0.2 1</ambient>
                        <diffuse>0.9 0.2 1.0 1</diffuse>
                        <specular>0.7 1.0 0.0 1</specular>
                    </material>
                </visual>
                <collision name='collision'> <!--todo: describe why we need the collision-->
                    <geometry>
                        <box>
                            <size>0.5 40.0 2.0</size>
                        </box>
                    </geometry>
                </collision>
                <sensor name='sensor_contact' type='contact'>
                    <contact>
                        <collision>collision</collision>
                    </contact>
                    <always_on>1</always_on>
                </sensor>
            </link>
            <link name='block2'>
                <pose> 20 0 0 0 0 0 </pose>
                <visual name='visual'>
                    <geometry>
                        <box>
                            <size>0.5 40.0 2.0</size>
                        </box>
                    </geometry>
                    <!--let's add color to our link-->
                    <material>
                        <ambient>0.4 0.7 0.2 1</ambient>
                        <diffuse>0.9 0.2 1.0 1</diffuse>
                        <specular>0.7 1.0 0.0 1</specular>
                    </material>
                </visual>
                <collision name='collision'> <!--todo: describe why we need the collision-->
                    <geometry>
                        <box>
                            <size>0.5 40.0 2.0</size>
                        </box>
                    </geometry>
                </collision>
                <sensor name='sensor_contact' type='contact'>
                    <contact>
                        <collision>collision</collision>
                    </contact>
                    <always_on>1</always_on>
                </sensor>
            </link>
            <link name='block3'>
                <pose> -20 0 0 0 0 0 </pose>
                <visual name='visual'>
                    <geometry>
                        <box>
                            <size>0.5 40.0 2.0</size>
                        </box>
                    </geometry>
                    <!--let's add color to our link-->
                    <material>
                        <ambient>0.4 0.7 0.2 1</ambient>
                        <diffuse>0.9 0.2 1.0 1</diffuse>
                        <specular>0.7 1.0 0.0 1</specular>
                    </material>
                </visual>
                <collision name='collision'> <!--todo: describe why we need the collision-->
                    <geometry>
                        <box>
                            <size>0.5 40.0 2.0</size>
                        </box>
                    </geometry>
                </collision>
                <sensor name='sensor_contact' type='contact'>
                    <contact>
                        <collision>collision</collision>
                    </contact>
                    <always_on>1</always_on>
                </sensor>
            </link>
            <link name='block4'>
                <pose> -7.5 -10 0 0 0 1.5707 </pose>
                <visual name='visual'>
                    <geometry>
                        <box>
                            <size>0.5 25.0 2.0</size>
                        </box>
                    </geometry>
                    <!--let's add color to our link-->
                    <material>
                        <ambient>0.4 0.7 0.2 1</ambient>
                        <diffuse>0.9 0.2 1.0 1</diffuse>
                        <specular>0.7 1.0 0.0 1</specular>
                    </material>
                </visual>
                <collision name='collision'> <!--todo: describe why we need the collision-->
                    <geometry>
                        <box>
                            <size>0.5 25.0 2.0</size>
                        </box>
                    </geometry>
                </collision>
                <sensor name='sensor_contact' type='contact'>
                    <contact>
                        <collision>collision</collision>
                    </contact>
                    <always_on>1</always_on>
                </sensor>
            </link>
            <link name='block5'>
                <pose> 13.7 -6 0 0 0 0.5236 </pose>
                <visual name='visual'>
                    <geometry>
                        <box>
                            <size>0.5 25.0 2.0</size>
                        </box>
                    </geometry>
                    <!--let's add color to our link-->
                    <material>
                        <ambient>0.4 0.7 0.2 1</ambient>
                        <diffuse>0.9 0.2 1.0 1</diffuse>
                        <specular>0.7 1.0 0.0 1</specular>
                    </material>
                </visual>
                <collision name='collision'> <!--todo: describe why we need the collision-->
                    <geometry>
                        <box>
                            <size>0.5 25.0 2.0</size>
                        </box>
                    </geometry>
                </collision>
                <sensor name='sensor_contact' type='contact'>
                    <contact>
                        <collision>collision</collision>
                    </contact>
                    <always_on>1</always_on>
                </sensor>
            </link>
            <link name='block6'>
                <pose> 0 13.7 0 0 0 -1.0472 </pose>
                <visual name='visual'>
                    <geometry>
                        <box>
                            <size>0.5 25.0 2.0</size>
                        </box>
                    </geometry>
                    <!--let's add color to our link-->
                    <material>
                        <ambient>0.4 0.7 0.2 1</ambient>
                        <diffuse>0.9 0.2 1.0 1</diffuse>
                        <specular>0.7 1.0 0.0 1</specular>
                    </material>
                </visual>
                <collision name='collision'> <!--todo: describe why we need the collision-->
                    <geometry>
                        <box>
                            <size>0.5 25.0 2.0</size>
                        </box>
                    </geometry>
                </collision>
                <sensor name='sensor_contact' type='contact'>
                    <contact>
                        <collision>collision</collision>
                    </contact>
                    <always_on>1</always_on>
                </sensor>
            </link>
            <plugin filename="libgz-sim-touchplugin-system.so"
                    name="gz::sim::systems::TouchPlugin">
                <target>vehicle_blue</target>
                <namespace>wall</namespace>
                <time>0.001</time>
                <enabled>true</enabled>
            </plugin>
        </model>

        <!-- <include>
            <name>marble_car</name>
            <pose>0 1.5 0 0 0 0</pose>
            <uri>
            model://./models/MARBLE_HD2_SENSOR_CONFIG_1
            </uri>
        </include>
        <include>
            <name>ctu_car</name>
            <pose>0 -1.5 0 0 0 0</pose>
            <uri>
            model://./models/CTU_CRAS_NORLAB_HUSKY_SENSOR_CONFIG_1
            </uri>
        </include> -->
        <include>
            <name>crocodile</name>
            <pose>-16 15 0 0 0 -1.0472</pose>
            <uri>
            model://./models/crocodile
            </uri>
        </include>
        <!-- <include>
            <name>Akeman</name>
            <pose>-5 0 0 0 0 0</pose>
            <uri>
            model://CORO_ROCKY_SENSOR_CONFIG_3
            </uri>
        </include> -->


        <!-- Moving Forward-->
        <plugin filename="libgz-sim-triggered-publisher-system.so"
                name="gz::sim::systems::TriggeredPublisher">
            <input type="gz.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">16777235</match>
            </input>
            <output type="gz.msgs.Twist" topic="/cmd_vel">
                linear: {x: 5}, angular: {z: 0.0}
            </output>
        </plugin>

        <!-- Moving Backward-->
        <plugin filename="libgz-sim-triggered-publisher-system.so"
                name="gz::sim::systems::TriggeredPublisher">
            <input type="gz.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">16777237</match>
            </input>
            <output type="gz.msgs.Twist" topic="/cmd_vel">
                linear: {x: -5}, angular: {z: 0.0}
            </output>
        </plugin>

        <!-- Rotating right-->
        <plugin filename="libgz-sim-triggered-publisher-system.so"
                name="gz::sim::systems::TriggeredPublisher">
            <input type="gz.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">16777236</match>
            </input>
            <output type="gz.msgs.Twist" topic="/cmd_vel">
                linear: {x: 0.0}, angular: {z: -5}
            </output>
        </plugin>

        <!--Rotating left-->
        <plugin filename="libgz-sim-triggered-publisher-system.so"
                name="gz::sim::systems::TriggeredPublisher">
            <input type="gz.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">16777234</match>
            </input>
            <output type="gz.msgs.Twist" topic="/cmd_vel">
                linear: {x: 0.0}, angular: {z: 5}
            </output>
        </plugin>

        <!--stop when hit the wall-->
        <plugin filename="libgz-sim-triggered-publisher-system.so"
                name="gz::sim::systems::TriggeredPublisher">
            <input type="gz.msgs.Boolean" topic="/wall/touched">
                <match>data: true</match>
            </input>
            <output type="gz.msgs.Twist" topic="/cmd_vel">
                linear: {x: 0.0}, angular: {z: 0.0}
            </output>
        </plugin>
    </world>
</sdf>
        
        <!-- <model name='wall'>
            <static>true</static>
            <pose>5 0 0 0 0 0</pose><!--pose relative to the world-->
            <link name='box'>
                <pose/>
                <inertial> <!--inertial properties of the link mass, inertia matix-->
                    <mass>1.14395</mass>
                    <inertia>
                        <ixx>9.532917</ixx>
                        <ixy>0</ixy>
                        <ixz>0</ixz>
                        <iyy>0.023832</iyy>
                        <iyz>0</iyz>
                        <izz>9.556749</izz>
                    </inertia>
                </inertial>
                <visual name='visual'>
                    <geometry>
                        <box>
                            <size>0.5 20.0 2.0</size>
                        </box>
                    </geometry>
                    <!--let's add color to our link-->
                    <material>
                        <ambient>0.4 0.7 0.2 1</ambient>
                        <diffuse>0.9 0.2 1.0 1</diffuse>
                        <specular>0.7 1.0 0.0 1</specular>
                    </material>
                </visual>
                <collision name='collision'> <!--todo: describe why we need the collision-->
                    <geometry>
                        <box>
                            <size>0.5 20.0 2.0</size>
                        </box>
                    </geometry>
                </collision>
                <sensor name='sensor_contact' type='contact'>
                    <contact>
                        <collision>collision</collision>
                    </contact>
                    <always_on>1</always_on>
                </sensor>
            </link>
            <plugin filename="libgz-sim-touchplugin-system.so"
                    name="gz::sim::systems::TouchPlugin">
                <target>vehicle_blue</target>
                <namespace>wall</namespace>
                <time>0.001</time>
                <enabled>true</enabled>
            </plugin>
        </model> -->